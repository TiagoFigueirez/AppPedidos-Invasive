// <auto-generated />
using System;
using AppPedidos.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppPedidos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241017005107_migracaoInicial")]
    partial class migracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppPedidos.Models.CategoriaProduto", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("CategoriaNome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("CategoriaId");

                    b.ToTable("CategoriaProduto");
                });

            modelBuilder.Entity("AppPedidos.Models.Convenio", b =>
                {
                    b.Property<int>("ConvenioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConvenioId"));

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("NomeConvenio")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("ConvenioId");

                    b.HasIndex("RoleId");

                    b.ToTable("Convenio");
                });

            modelBuilder.Entity("AppPedidos.Models.EmailEnvioModel", b =>
                {
                    b.Property<int>("EmailEnvioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailEnvioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("EmailEnvioId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmailEnvio");
                });

            modelBuilder.Entity("AppPedidos.Models.Hospital", b =>
                {
                    b.Property<int>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HospitalId"));

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("NomeHospital")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("HospitalId");

                    b.HasIndex("RoleId");

                    b.ToTable("Hospital");
                });

            modelBuilder.Entity("AppPedidos.Models.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicoId"));

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("NomeMedico")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("MedicoId");

                    b.HasIndex("RoleId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("AppPedidos.Models.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteId"));

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("NomePaciente")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("PacienteId");

                    b.HasIndex("RoleId");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("AppPedidos.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<int>("ConvenioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataProcedimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Emergencial")
                        .HasColumnType("bit");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<int>("MedicosId")
                        .HasColumnType("int");

                    b.Property<string>("Observações")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PedidoId");

                    b.HasIndex("ConvenioId");

                    b.HasIndex("HospitalId");

                    b.HasIndex("MedicosId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("AppPedidos.Models.PedidosItens", b =>
                {
                    b.Property<int>("PedidosItensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidosItensId"));

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutosId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PedidosItensId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutosId");

                    b.ToTable("PedidosItens");
                });

            modelBuilder.Entity("AppPedidos.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoId"));

                    b.Property<string>("CodigoProduto")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("DescricaoProduto")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("SubcategoriaId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.HasIndex("SubcategoriaId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("AppPedidos.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AppPedidos.Models.SubcategoriaProduto", b =>
                {
                    b.Property<int>("SubcategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubcategoriaId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("NomeSubcategoria")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("SubcategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("SubcategoriaProduto");
                });

            modelBuilder.Entity("AppPedidos.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("ConfimarSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RoleId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AppPedidos.Models.Convenio", b =>
                {
                    b.HasOne("AppPedidos.Models.Role", "Role")
                        .WithMany("Convenios")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AppPedidos.Models.EmailEnvioModel", b =>
                {
                    b.HasOne("AppPedidos.Models.Role", "Role")
                        .WithMany("EmailEnvio")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AppPedidos.Models.Hospital", b =>
                {
                    b.HasOne("AppPedidos.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AppPedidos.Models.Medico", b =>
                {
                    b.HasOne("AppPedidos.Models.Role", "Role")
                        .WithMany("Medicos")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AppPedidos.Models.Paciente", b =>
                {
                    b.HasOne("AppPedidos.Models.Role", null)
                        .WithMany("Pacientes")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppPedidos.Models.Pedido", b =>
                {
                    b.HasOne("AppPedidos.Models.Convenio", "Convenio")
                        .WithMany("Pedido")
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppPedidos.Models.Hospital", "Hospital")
                        .WithMany("Pedido")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppPedidos.Models.Medico", "Medico")
                        .WithMany("Pedido")
                        .HasForeignKey("MedicosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppPedidos.Models.Paciente", "Paciente")
                        .WithMany("Pedido")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppPedidos.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("Hospital");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AppPedidos.Models.PedidosItens", b =>
                {
                    b.HasOne("AppPedidos.Models.Pedido", "Pedido")
                        .WithMany("PedidosItens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppPedidos.Models.Produto", "Produto")
                        .WithMany("PedidosItens")
                        .HasForeignKey("ProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("AppPedidos.Models.Produto", b =>
                {
                    b.HasOne("AppPedidos.Models.SubcategoriaProduto", "SubcategoriaProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("SubcategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubcategoriaProduto");
                });

            modelBuilder.Entity("AppPedidos.Models.SubcategoriaProduto", b =>
                {
                    b.HasOne("AppPedidos.Models.CategoriaProduto", "CategoriaProduto")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProduto");
                });

            modelBuilder.Entity("AppPedidos.Models.Usuario", b =>
                {
                    b.HasOne("AppPedidos.Models.Role", "Role")
                        .WithMany("Usuarios")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AppPedidos.Models.CategoriaProduto", b =>
                {
                    b.Navigation("Subcategorias");
                });

            modelBuilder.Entity("AppPedidos.Models.Convenio", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("AppPedidos.Models.Hospital", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("AppPedidos.Models.Medico", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("AppPedidos.Models.Paciente", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("AppPedidos.Models.Pedido", b =>
                {
                    b.Navigation("PedidosItens");
                });

            modelBuilder.Entity("AppPedidos.Models.Produto", b =>
                {
                    b.Navigation("PedidosItens");
                });

            modelBuilder.Entity("AppPedidos.Models.Role", b =>
                {
                    b.Navigation("Convenios");

                    b.Navigation("EmailEnvio");

                    b.Navigation("Medicos");

                    b.Navigation("Pacientes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AppPedidos.Models.SubcategoriaProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("AppPedidos.Models.Usuario", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
